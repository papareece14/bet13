#include "pch.h"
#include <iostream>
#include <SFML/Graphics.hpp>
#include <ctime>
#include <cstdlib>  
#include <windows.h>
using namespace std;

class food {
public:
	int posX;
	int posY;
	int foodNum = 0;
	void spawn();
	sf::CircleShape foodShape;
	void foodInit();
	//string name;
};
class Player {
public:
	Player();
	int mass = 10;
	int move_x = 300;
	int move_y = 300;
	int radius = 50;
	sf::CircleShape player;
};
void food::foodInit() {
	foodShape.setFillColor(sf::Color::White);
	foodShape.setRadius(5);
	foodShape.setPosition(posX, posY);
}
void food::spawn(void) {
	posX = (rand() % 1000) + 0;
	posY = (rand() % 1000) + 0;
}
Player::Player() {
	player.setRadius(50);
	player.setFillColor(sf::Color::White);
	player.setPosition(move_x, move_y);
}
int main()
{
	food foods[20] = { food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food(), food() };
	srand(time(0));
	int i = 0;
	sf::RenderWindow window(sf::VideoMode(1000, 1000), "Sprites!");
	sf::Texture playerTex;
	sf::Texture playerTex1;
	Player p2;
	playerTex.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background2.jpg");
	p2.player.setTexture(&playerTex); // texture is a sf::Texture
	p2.player.setTextureRect(sf::IntRect(50, 65, 115, 100));
	Player p3;
	playerTex1.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background3.jpg");
	p3.player.setTexture(&playerTex1); // texture is a sf::Texture
	p3.player.setTextureRect(sf::IntRect(65, 25, 100, 100));
	for (i = 0; i < 20; i++) {
		foods[i].spawn();
		foods[i].foodInit();
	}

	while (window.isOpen()) {
		sf::Event event;
		while (window.pollEvent(event)) {
			if (event.type == sf::Event::Closed)
				window.close();
			if (event.type == sf::Event::KeyPressed) {
				if (event.key.code == sf::Keyboard::W) {
					p2.move_y -= 5;
					p2.player.setPosition(p2.move_x, p2.move_y);
				}
				if (event.key.code == sf::Keyboard::S) {
					p2.move_y += 5;
					p2.player.setPosition(p2.move_x, p2.move_y);

				}
				if (event.key.code == sf::Keyboard::A) {
					p2.move_x -= 5;
					p2.player.setPosition(p2.move_x, p2.move_y);
				}
				if (event.key.code == sf::Keyboard::D) {
					p2.move_x += 5;
					p2.player.setPosition(p2.move_x, p2.move_y);
				}
			}
			if (event.type == sf::Event::KeyPressed) {
				if (event.key.code == sf::Keyboard::Up) {
					p3.move_y -= 5;
					p3.player.setPosition(p3.move_x, p3.move_y);
				}
				if (event.key.code == sf::Keyboard::Down) {
					p3.move_y += 5;
					p3.player.setPosition(p3.move_x, p3.move_y);
				}
				if (event.key.code == sf::Keyboard::Left) {
					p3.move_x -= 5;
					p3.player.setPosition(p3.move_x, p3.move_y);
				}
				if (event.key.code == sf::Keyboard::Right) {
					p3.move_x += 5;
					p3.player.setPosition(p3.move_x, p3.move_y);
				}
			}

		}
		window.clear();
		window.draw(p2.player);
		window.draw(p3.player);
		for (i = 0; i < 20; i++) {
			window.draw(foods[i].foodShape);
		}

		window.display();
	}
}