								Link as a Skin
								    Stalin

#include "pch.h"
#include <iostream>
#include <SFML/Graphics.hpp>
using namespace std;

int main()
{
	//// Load an image file from a file
	//sf::Image background;
	//if (!background.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background.jpg"))
	//	return -1;
	//// Create a 20x20 image filled with black color
	//sf::Image image;
	//image.create(20, 20, sf::Color::Black);
	//// Copy image1 on image2 at position (10, 10)
	//image.copy(background, 10, 10);
	//// Make the top-left pixel transparent
	//sf::Color color = image.getPixel(0, 0);
	//color.a = 0;
	//image.setPixel(0, 0, color);
	//// Save the image to a file
	//if (!image.saveToFile("result.png"))
	//	return -1;

	sf::RenderWindow window(sf::VideoMode(1000, 1000), "Sprites!");

	sf::Texture playerTex;
	playerTex.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background.jpg");

	sf::CircleShape shape(50);

	//sf::Sprite playerSprite;
	//playerSprite.setTexture(playerTex);
	shape.setTexture(&playerTex); // texture is a sf::Texture
	shape.setTextureRect(sf::IntRect(10, 10, 100, 100));

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
		}

		window.clear();
		window.draw(shape);
		window.display();
	}

}



								Supreme Beach Ball
#include "pch.h"
#include <iostream>
#include <SFML/Graphics.hpp>
using namespace std;

int main()
{
	//// Load an image file from a file
	//sf::Image background;
	//if (!background.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background.jpg"))
	//	return -1;
	//// Create a 20x20 image filled with black color
	//sf::Image image;
	//image.create(20, 20, sf::Color::Black);
	//// Copy image1 on image2 at position (10, 10)
	//image.copy(background, 10, 10);
	//// Make the top-left pixel transparent
	//sf::Color color = image.getPixel(0, 0);
	//color.a = 0;
	//image.setPixel(0, 0, color);
	//// Save the image to a file
	//if (!image.saveToFile("result.png"))
	//	return -1;

	sf::RenderWindow window(sf::VideoMode(1000, 1000), "Sprites!");

	sf::Texture playerTex;
	playerTex.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background2.jpg");

	sf::CircleShape shape(50);

	//sf::Sprite playerSprite;
	//playerSprite.setTexture(playerTex);
	shape.setTexture(&playerTex); // texture is a sf::Texture
	shape.setTextureRect(sf::IntRect(50, 65, 115, 100));

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
		}

		window.clear();
		window.draw(shape);
		window.display();
	}


}


									Spongebob Skin


#include "pch.h"
#include <iostream>
#include <SFML/Graphics.hpp>
using namespace std;

int main()
{
	//// Load an image file from a file
	//sf::Image background;
	//if (!background.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background.jpg"))
	//	return -1;
	//// Create a 20x20 image filled with black color
	//sf::Image image;
	//image.create(20, 20, sf::Color::Black);
	//// Copy image1 on image2 at position (10, 10)
	//image.copy(background, 10, 10);
	//// Make the top-left pixel transparent
	//sf::Color color = image.getPixel(0, 0);
	//color.a = 0;
	//image.setPixel(0, 0, color);
	//// Save the image to a file
	//if (!image.saveToFile("result.png"))
	//	return -1;

	sf::RenderWindow window(sf::VideoMode(1000, 1000), "Sprites!");

	sf::Texture playerTex;
	playerTex.loadFromFile("C:/Users/iD Student/Desktop/SFML Set-Up/SFML Set-Up/MyFirstSFML/x64/Debug/Textures/background3.jpg");

	sf::CircleShape shape(60);

	//sf::Sprite playerSprite;
	//playerSprite.setTexture(playerTex);
	shape.setTexture(&playerTex); // texture is a sf::Texture
	shape.setTextureRect(sf::IntRect(65, 25, 100, 100));

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
		}

		window.clear();
		window.draw(shape);
		window.display();
	}


}